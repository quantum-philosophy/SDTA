.TH "peoParaPopEval" 3 "8 Oct 2007" "Version 1.0" "ParadisEO-PEOMovingObjects" \" -*- nroff -*-
.ad l
.nh
.SH NAME
peoParaPopEval \- The \fBpeoParaPopEval\fP represents a wrapper for creating a functor capable of applying in parallel an EO-derived evaluation functor.  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <peoParaPopEval.h>\fP
.PP
Inherits \fBpeoPopEval< EOT >< EOT >\fP.
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBpeoParaPopEval\fP (\fBeoEvalFunc\fP< EOT > &__eval_func)"
.br
.RI "\fIConstructor function - an EO-derived evaluation functor has to be specified; an internal reference is set towards the specified evaluation functor. \fP"
.ti -1c
.RI "\fBpeoParaPopEval\fP (const std::vector< \fBeoEvalFunc\fP< EOT > * > &__funcs, \fBpeoAggEvalFunc\fP< EOT > &__merge_eval)"
.br
.RI "\fIConstructor function - a vector of EO-derived evaluation functors has to be specified as well as an aggregation function. \fP"
.ti -1c
.RI "void \fBoperator()\fP (\fBeoPop\fP< EOT > &__pop)"
.br
.RI "\fIOperator for applying the evaluation functor (direct or aggregate) for each individual of the specified population. \fP"
.ti -1c
.RI "void \fBpackData\fP ()"
.br
.RI "\fIAuxiliary function for transferring data between the process requesting an evaluation operation and the process that performs the actual evaluation phase. \fP"
.ti -1c
.RI "void \fBunpackData\fP ()"
.br
.RI "\fIAuxiliary function for transferring data between the process requesting an evaluation operation and the process that performs the actual evaluation phase. \fP"
.ti -1c
.RI "void \fBexecute\fP ()"
.br
.RI "\fIAuxiliary function - it calls the specified evaluation functor(s). There is no need to explicitly call the function. \fP"
.ti -1c
.RI "void \fBpackResult\fP ()"
.br
.RI "\fIAuxiliary function for transferring data between the process requesting an evaluation operation and the process that performs the actual evaluation phase. \fP"
.ti -1c
.RI "void \fBunpackResult\fP ()"
.br
.RI "\fIAuxiliary function for transferring data between the process requesting an evaluation operation and the process that performs the actual evaluation phase. \fP"
.ti -1c
.RI "void \fBnotifySendingData\fP ()"
.br
.RI "\fIAuxiliary function for notifications between the process requesting an evaluation operation and the processes that performs the actual evaluation phase. \fP"
.ti -1c
.RI "void \fBnotifySendingAllResourceRequests\fP ()"
.br
.RI "\fIAuxiliary function for notifications between the process requesting an evaluation operation and the processes that performs the actual evaluation phase. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "const std::vector< \fBeoEvalFunc\fP< EOT > * > & \fBfuncs\fP"
.br
.ti -1c
.RI "std::vector< \fBeoEvalFunc\fP< EOT > * > \fBone_func\fP"
.br
.ti -1c
.RI "\fBpeoAggEvalFunc\fP< EOT > & \fBmerge_eval\fP"
.br
.ti -1c
.RI "\fBpeoNoAggEvalFunc\fP< EOT > \fBno_merge_eval\fP"
.br
.ti -1c
.RI "std::queue< EOT * > \fBtasks\fP"
.br
.ti -1c
.RI "std::map< EOT *, std::pair< unsigned, unsigned > > \fBprogression\fP"
.br
.ti -1c
.RI "unsigned \fBnum_func\fP"
.br
.ti -1c
.RI "EOT \fBsol\fP"
.br
.ti -1c
.RI "EOT * \fBad_sol\fP"
.br
.ti -1c
.RI "unsigned \fBtotal\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class EOT> class peoParaPopEval< EOT >"
The \fBpeoParaPopEval\fP represents a wrapper for creating a functor capable of applying in parallel an EO-derived evaluation functor. 

The class offers the possibility of chosing between a single-function evaluation and an aggregate evaluation function, including several sub-evalution functions. 
.PP
Definition at line 54 of file peoParaPopEval.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class EOT> \fBpeoParaPopEval\fP< EOT >::\fBpeoParaPopEval\fP (\fBeoEvalFunc\fP< EOT > & __eval_func)"
.PP
Constructor function - an EO-derived evaluation functor has to be specified; an internal reference is set towards the specified evaluation functor. 
.PP
\fBParameters:\fP
.RS 4
\fIeoEvalFunc<\fP EOT >& __eval_func - EO-derived evaluation functor to be applied in parallel on each individual of a specified population 
.RE
.PP

.PP
Definition at line 130 of file peoParaPopEval.h.
.PP
References peoParaPopEval< EOT >::one_func.
.SS "template<class EOT> \fBpeoParaPopEval\fP< EOT >::\fBpeoParaPopEval\fP (const std::vector< \fBeoEvalFunc\fP< EOT > * > & __funcs, \fBpeoAggEvalFunc\fP< EOT > & __merge_eval)"
.PP
Constructor function - a vector of EO-derived evaluation functors has to be specified as well as an aggregation function. 
.PP
\fBParameters:\fP
.RS 4
\fIconst\fP std :: vector< \fBeoEvalFunc\fP < EOT >* >& __funcs - vector of EO-derived partial evaluation functors; 
.br
\fIpeoAggEvalFunc<\fP EOT >& __merge_eval - aggregation functor for creating a fitness value out of the partial fitness values. 
.RE
.PP

.PP
Definition at line 139 of file peoParaPopEval.h.
.SH "Member Function Documentation"
.PP 
.SS "template<class EOT> void \fBpeoParaPopEval\fP< EOT >::operator() (\fBeoPop\fP< EOT > & __pop)\fC [virtual]\fP"
.PP
Operator for applying the evaluation functor (direct or aggregate) for each individual of the specified population. 
.PP
\fBParameters:\fP
.RS 4
\fIeoPop<\fP EOT >& __pop - population to be evaluated by applying the evaluation functor specified in the constructor. 
.RE
.PP

.PP
Implements \fBpeoPopEval< EOT >\fP.
.PP
Definition at line 150 of file peoParaPopEval.h.
.PP
References peoParaPopEval< EOT >::funcs, peoParaPopEval< EOT >::progression, Service::requestResourceRequest(), Communicable::stop(), peoParaPopEval< EOT >::tasks, and peoParaPopEval< EOT >::total.
.SS "template<class EOT> void \fBpeoParaPopEval\fP< EOT >::packData ()\fC [virtual]\fP"
.PP
Auxiliary function for transferring data between the process requesting an evaluation operation and the process that performs the actual evaluation phase. 
.PP
There is no need to explicitly call the function. 
.PP
Reimplemented from \fBService\fP.
.PP
Definition at line 171 of file peoParaPopEval.h.
.PP
References peoParaPopEval< EOT >::progression, and peoParaPopEval< EOT >::tasks.
.SS "template<class EOT> void \fBpeoParaPopEval\fP< EOT >::unpackData ()\fC [virtual]\fP"
.PP
Auxiliary function for transferring data between the process requesting an evaluation operation and the process that performs the actual evaluation phase. 
.PP
There is no need to explicitly call the function. 
.PP
Reimplemented from \fBService\fP.
.PP
Definition at line 185 of file peoParaPopEval.h.
.PP
References peoParaPopEval< EOT >::ad_sol, peoParaPopEval< EOT >::num_func, and peoParaPopEval< EOT >::sol.
.SS "template<class EOT> void \fBpeoParaPopEval\fP< EOT >::packResult ()\fC [virtual]\fP"
.PP
Auxiliary function for transferring data between the process requesting an evaluation operation and the process that performs the actual evaluation phase. 
.PP
There is no need to explicitly call the function. 
.PP
Reimplemented from \fBService\fP.
.PP
Definition at line 202 of file peoParaPopEval.h.
.PP
References peoParaPopEval< EOT >::ad_sol, and peoParaPopEval< EOT >::sol.
.SS "template<class EOT> void \fBpeoParaPopEval\fP< EOT >::unpackResult ()\fC [virtual]\fP"
.PP
Auxiliary function for transferring data between the process requesting an evaluation operation and the process that performs the actual evaluation phase. 
.PP
There is no need to explicitly call the function. 
.PP
Reimplemented from \fBService\fP.
.PP
Definition at line 211 of file peoParaPopEval.h.
.PP
References peoParaPopEval< EOT >::ad_sol, Service::getOwner(), peoParaPopEval< EOT >::merge_eval, peoParaPopEval< EOT >::progression, Communicable::resume(), Thread::setActive(), and peoParaPopEval< EOT >::total.
.SS "template<class EOT> void \fBpeoParaPopEval\fP< EOT >::notifySendingData ()\fC [virtual]\fP"
.PP
Auxiliary function for notifications between the process requesting an evaluation operation and the processes that performs the actual evaluation phase. 
.PP
There is no need to explicitly call the function. 
.PP
Reimplemented from \fBService\fP.
.PP
Definition at line 242 of file peoParaPopEval.h.
.SS "template<class EOT> void \fBpeoParaPopEval\fP< EOT >::notifySendingAllResourceRequests ()\fC [virtual]\fP"
.PP
Auxiliary function for notifications between the process requesting an evaluation operation and the processes that performs the actual evaluation phase. 
.PP
There is no need to explicitly call the function. 
.PP
Reimplemented from \fBService\fP.
.PP
Definition at line 247 of file peoParaPopEval.h.
.PP
References Service::getOwner(), and Thread::setPassive().

.SH "Author"
.PP 
Generated automatically by Doxygen for ParadisEO-PEOMovingObjects from the source code.
