#!/usr/bin/env ruby

require File.join File.dirname(__FILE__), 'generator'
require File.join File.dirname(__FILE__), 'template'

# The area of the die in square miters
DIE_AREA = 81e-6

# Multiplied by the number of tasks
POPULATION_FACTOR = 4

# Repetitions of the GA
GA_REALIZATIONS_PER_GRAPH = 10

STALL_GENERATIONS = 200

if ARGV.length != 5
  puts 'Need some arguments...'
  puts '1. the template directory'
  puts '2. the number of processors, e.g. "(1..16)"'
  puts '3. the number of tasks, e.g. "[ 60, 90, 120 ]"'
  puts '4. the number of repetitions of each combination'
  puts '5. the output directory'
  exit
end

input = ARGV[0]
processors = eval ARGV[1]
tasks = eval ARGV[2]
repeat = ARGV[3].to_i
output = ARGV[4]

unless File.directory? input
  puts 'Need a real template directory...'
  exit
end

unless File.directory? output
  puts 'Need a real output directory...'
  exit
end

tgff_template = File.join input, 'tgff.template'
genetic_template = File.join input, 'genetic.template'
thermal_template = File.join input, 'hotspot.template'

unless File.exist? tgff_template
  puts "Cannot find '#{ tgff_template }'"
  exit
end

unless File.exist? genetic_template
  puts "Cannot find '#{ genetic_template }'"
  exit
end

unless File.exist? thermal_template
  puts "Cannot find '#{ thermal_template }'"
  exit
end

srand Time.now.to_i

tgff_template = Template.new tgff_template
genetic_template = Template.new genetic_template
thermal_template = Template.new thermal_template

processors.each do |processor_count|
  tasks.each do |task_count|

    name = "%03d_%03d" % [ processor_count, task_count ]
    directory = File.join output, name

    puts "Test case %d x %d: %s" % [ processor_count, task_count, directory ]

    Dir::mkdir directory unless File.directory? directory

    (1..repeat).each do |i|
      puts "  #{ i }:"

      begin
        tgffopt = File.join directory, ("%03d.tgffopt" % i)
        puts "    - TGFF options: #{ tgffopt }"
        Generator.tgffopt :template => tgff_template,
          :processor_count => processor_count, :task_count => task_count,
          :output => tgffopt

        tgff = File.join directory, ("%03d.tgff" % i)
        puts "    - TGFF: #{ tgff }"
        Generator.tgff :input => tgffopt, :output => tgff
      end until Generator.validate_tgff(:input => tgff, :task_count => task_count)

      system = File.join directory, ("%03d_system.config" % i)
      puts "    - system configuration: #{ system }"
      Generator.system :input => tgff, :output => system

      genetic = File.join directory, ("%03d_genetic.config" % i)
      puts "    - genetic configuration: #{ genetic }"
      Generator.genetic :template => genetic_template,
        :processor_count => processor_count, :task_count => task_count,
        :output => genetic

      floorplan = File.join directory, ("%03d_floorplan.config" % i)
      puts "    - floorplan configuration: #{ floorplan }"
      Generator.floorplan :processor_count => processor_count, :output => floorplan

      thermal = File.join directory, ("%03d_thermal.config" % i)
      puts "    - thermal configuration: #{ thermal }"
      Generator.thermal :template => thermal_template, :output => thermal
    end
  end
end
