#!/usr/bin/env ruby

require File.join File.dirname(__FILE__), 'generator'
require File.join File.dirname(__FILE__), 'template'

# The area of the die in square miters
DIE_AREA = 4e-6

# Multiplied by the number of tasks
POPULATION_FACTOR = 4

if ARGV.length != 3
  puts 'Need some arguments...'
  puts '1. the template directory'
  puts '2. pairs "[ [ cores, tasks, variants = 20, repeat = 1, stall = 200 ], ... ]"'
  puts '3. the output directory'
  exit
end

input = ARGV[0]
pairs = eval ARGV[1]
output = ARGV[2]

unless File.directory? input
  puts 'Need a real template directory...'
  exit
end

unless File.directory? output
  puts 'Need a real output directory...'
  exit
end

params_template = File.join input, 'params.template'
hotspot_template = File.join input, 'hotspot.template'

unless File.exist? params_template
  puts "Cannot find '#{ params_template }'"
  exit
end

unless File.exist? hotspot_template
  puts "Cannot find '#{ hotspot_template }'"
  exit
end

params_template = Template.new params_template
hotspot_template = Template.new hotspot_template

pairs.each do |processor_count, task_count, variant_count, repeat_count, stall_generations|
  variant_count ||= 20
  repeat_count ||= 1
  stall_generations ||= 200

  tgff_template = File.join input, ("%03d.tgffopt" % processor_count)

  unless File.exist? tgff_template
    puts "Cannot find '#{ tgff_template }'"
    exit
  end

  tgff_template = Template.new tgff_template

  name = "%03d_%03d" % [ processor_count, task_count ]
  directory = File.join output, name

  puts "Test case %d x %d: %s" % [ processor_count, task_count, directory ]

  Dir::mkdir directory unless File.directory? directory

  seed = 0

  (1..variant_count).each do |i|
    puts "  #{ i }:"

    begin
      tgffopt = File.join directory, ("%03d.tgffopt" % i)
      puts "    - TGFF options: #{ tgffopt }"
      Generator.tgffopt :template => tgff_template,
        :processor_count => processor_count, :task_count => task_count,
        :output => tgffopt, :seed => seed

      tgff = File.join directory, ("%03d.tgff" % i)
      puts "    - TGFF: #{ tgff }"
      Generator.tgff :input => tgffopt, :output => tgff

      seed += 1
    end until Generator.validate_tgff(:input => tgff, :task_count => task_count)

    system = File.join directory, ("%03d_system.config" % i)
    puts "    - system configuration: #{ system }"
    Generator.system :input => tgff, :output => system

    params = File.join directory, ("%03d_params.config" % i)
    puts "    - parameters: #{ params }"
    Generator.params :template => params_template,
      :processor_count => processor_count, :task_count => task_count,
      :repeat_count => repeat_count, :stall_generations => stall_generations,
      :output => params

    floorplan = File.join directory, ("%03d_floorplan.config" % i)
    puts "    - floorplan configuration: #{ floorplan }"
    Generator.floorplan :processor_count => processor_count, :output => floorplan

    hotspot = File.join directory, ("%03d_hotspot.config" % i)
    puts "    - HotSpot configuration: #{ hotspot }"
    Generator.hotspot :template => hotspot_template, :output => hotspot
  end
end
